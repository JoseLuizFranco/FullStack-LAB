version: "3.9"

services:
  frontend:
    build: ./frontend
    container_name: ${PROJECT_NAME}_frontend
    environment:
      - CHOKIDAR_USEPOLLING=1
      - VITE_PORT=${FRONTEND_INTERNAL_PORT}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_INTERNAL_PORT}"
    networks:
      - appnet

  backend:
    build: ./backend
    container_name: ${PROJECT_NAME}_backend
    environment:
      - NODE_ENV=development
      - PORT=${BACKEND_INTERNAL_PORT}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "${BACKEND_PORT}:${BACKEND_INTERNAL_PORT}"
    depends_on:
      - db
    networks:
      - appnet

  db:
    image: postgres:alpine
    container_name: ${PROJECT_NAME}_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - appnet

  pgadmin:
    image: dpage/pgadmin4
    container_name: ${PROJECT_NAME}_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - db
    networks:
      - appnet

  nginx:
    build: ./nginx
    container_name: ${PROJECT_NAME}_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - frontend
      - backend
    networks:
      - appnet

volumes:
  db_data:
  pgadmin_data:

networks:
  appnet:
    driver: bridge